{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { PureComponent } from 'react';\nimport { register, unregister } from 'next-offline/runtime';\n\nvar OfflineSupport =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(OfflineSupport, _PureComponent);\n\n  function OfflineSupport() {\n    _classCallCheck(this, OfflineSupport);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(OfflineSupport).apply(this, arguments));\n  }\n\n  _createClass(OfflineSupport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if ('serviceWorker' in navigator) {\n        window.addEventListener('load', function () {\n          navigator.serviceWorker.register('/sw.js', {\n            scope: '/'\n          }).then(function (registration) {\n            console.log('SW registered: ', registration);\n          })[\"catch\"](function (registrationError) {\n            console.log('SW registration failed: ', registrationError);\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      register();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      unregister();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return OfflineSupport;\n}(PureComponent);\n\nexport default OfflineSupport;","map":{"version":3,"sources":["C:/Users/Lolwethu.Bongoza/Documents/Git/hacker-news/pages/offlinesupport.js"],"names":["React","PureComponent","register","unregister","OfflineSupport","navigator","window","addEventListener","serviceWorker","scope","then","registration","console","log","registrationError"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,sBAArC;;IAEMC,c;;;;;;;;;;;;;wCACgB;AAClB,UAAI,mBAAmBC,SAAvB,EAAkC;AAChCC,QAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AAC1CF,UAAAA,SAAS,CAACG,aAAV,CAAwBN,QAAxB,CAAiC,QAAjC,EAA2C;AAAEO,YAAAA,KAAK,EAAE;AAAT,WAA3C,EAA2DC,IAA3D,CAAgE,UAAUC,YAAV,EAAwB;AACtFC,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,YAA/B;AACD,WAFD,WAES,UAAUG,iBAAV,EAA6B;AACpCF,YAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCC,iBAAxC;AACD,WAJD;AAKD,SAND;AAOD;AACF;;;wCAEmB;AAClBZ,MAAAA,QAAQ;AACT;;;2CAEsB;AACrBC,MAAAA,UAAU;AACX;;;6BAEQ;AACP,aAAO,IAAP;AACD;;;;EAvB0BF,a;;AA0B7B,eAAeG,cAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { register, unregister } from 'next-offline/runtime'\r\n\r\nclass OfflineSupport extends PureComponent {\r\n  componentDidMount() {\r\n    if ('serviceWorker' in navigator) {\r\n      window.addEventListener('load', function () {\r\n        navigator.serviceWorker.register('/sw.js', { scope: '/' }).then(function (registration) {\r\n          console.log('SW registered: ', registration)\r\n        }).catch(function (registrationError) {\r\n          console.log('SW registration failed: ', registrationError)\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    register();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    unregister();\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default OfflineSupport;"]},"metadata":{},"sourceType":"module"}