{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport { unregister } from 'next-offline/runtime';\n\nclass NextOffline extends PureComponent {\n  componentDidMount() {\n    if ('serviceWorker' in navigator) {\n      window.addEventListener('load', function () {\n        navigator.serviceWorker.register('/service-worker.js', {\n          scope: '/'\n        }).then(registration => {\n          console.log('Service worker: ', registration.active.state);\n        }).catch(registrationError => {\n          console.log('Service Worker registration failed: ', registrationError);\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    unregister();\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default NextOffline;","map":{"version":3,"sources":["C:/Users/Lolwethu.Bongoza/Documents/Git/hacker-news/pages/nextoffline.js"],"names":["React","PureComponent","unregister","NextOffline","componentDidMount","navigator","window","addEventListener","serviceWorker","register","scope","then","registration","console","log","active","state","catch","registrationError","componentWillUnmount","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,sBAA3B;;AAEA,MAAMC,WAAN,SAA0BF,aAA1B,CAAwC;AAEpCG,EAAAA,iBAAiB,GAAG;AAChB,QAAI,mBAAmBC,SAAvB,EAAkC;AAC9BC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxCF,QAAAA,SAAS,CAACG,aAAV,CACKC,QADL,CACc,oBADd,EACoC;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADpC,EACoDC,IADpD,CACyDC,YAAY,IAAI;AACjEC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,YAAY,CAACG,MAAb,CAAoBC,KAApD;AACH,SAHL,EAGOC,KAHP,CAGcC,iBAAD,IAAuB;AAC5BL,UAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDI,iBAApD;AACH,SALL;AAMH,OAPD;AAQH;AACJ;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBjB,IAAAA,UAAU;AACb;;AAEDkB,EAAAA,MAAM,GAAG;AACL,WAAO,IAAP;AACH;;AArBmC;;AAwBxC,eAAejB,WAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { unregister } from 'next-offline/runtime'\r\n\r\nclass NextOffline extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        if ('serviceWorker' in navigator) {\r\n            window.addEventListener('load', function () {\r\n                navigator.serviceWorker\r\n                    .register('/service-worker.js', { scope: '/' }).then(registration => {\r\n                        console.log('Service worker: ', registration.active.state);\r\n                    }).catch((registrationError) => {\r\n                        console.log('Service Worker registration failed: ', registrationError)\r\n                    });\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        unregister();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default NextOffline;"]},"metadata":{},"sourceType":"module"}