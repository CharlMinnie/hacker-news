{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { PureComponent } from 'react';\nimport { register, unregister } from 'next-offline/runtime';\n\nvar NextOffline =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(NextOffline, _PureComponent);\n\n  function NextOffline() {\n    _classCallCheck(this, NextOffline);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NextOffline).apply(this, arguments));\n  }\n\n  _createClass(NextOffline, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //register();\n      if ('serviceWorker' in navigator) {\n        window.addEventListener('load', function () {\n          navigator.serviceWorker.register('/service-worker.js', {\n            scope: '/'\n          }).then(function (registration) {\n            console.log('Service worker: ', registration.active.state);\n          })[\"catch\"](function (registrationError) {\n            console.log('Service Worker registration failed: ', registrationError);\n          });\n        });\n      }\n\n      var CACHE_NAME = 'my-site-cache-v1';\n      var urlsToCache = ['/', '/pages/header.js', '/pages/layout.js', '/pages/index.js', '/pages/nextoffline.js', '/server.js', '/next.config.js', '/static/icons/icon.png'];\n      window.addEventListener('install', function (event) {\n        // Perform install steps\n        event.waitUntil(caches.open(CACHE_NAME).then(function (cache) {\n          console.log('Opened cache');\n          return cache.addAll(urlsToCache);\n        }));\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      unregister();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return NextOffline;\n}(PureComponent);\n\nexport default NextOffline;","map":{"version":3,"sources":["C:/Users/Lolwethu.Bongoza/Documents/Git/hacker-news/pages/nextoffline.js"],"names":["React","PureComponent","register","unregister","NextOffline","navigator","window","addEventListener","serviceWorker","scope","then","registration","console","log","active","state","registrationError","CACHE_NAME","urlsToCache","event","waitUntil","caches","open","cache","addAll"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,sBAArC;;IAEMC,W;;;;;;;;;;;;;wCAEkB;AAChB;AACA,UAAI,mBAAmBC,SAAvB,EAAkC;AAC9BC,QAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxCF,UAAAA,SAAS,CAACG,aAAV,CACKN,QADL,CACc,oBADd,EACoC;AAAEO,YAAAA,KAAK,EAAE;AAAT,WADpC,EACoDC,IADpD,CACyD,UAAAC,YAAY,EAAI;AACjEC,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,YAAY,CAACG,MAAb,CAAoBC,KAApD;AACH,WAHL,WAGa,UAACC,iBAAD,EAAuB;AAC5BJ,YAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDG,iBAApD;AACH,WALL;AAMH,SAPD;AAQH;;AACD,UAAIC,UAAU,GAAG,kBAAjB;AACA,UAAIC,WAAW,GAAG,CACd,GADc,EAEd,kBAFc,EAGd,kBAHc,EAId,iBAJc,EAKd,uBALc,EAMd,YANc,EAOd,iBAPc,EAQd,wBARc,CAAlB;AAWAZ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,UAAUY,KAAV,EAAiB;AAChD;AACAA,QAAAA,KAAK,CAACC,SAAN,CACIC,MAAM,CAACC,IAAP,CAAYL,UAAZ,EACKP,IADL,CACU,UAAAa,KAAK,EAAI;AACXX,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,iBAAOU,KAAK,CAACC,MAAN,CAAaN,WAAb,CAAP;AACH,SAJL,CADJ;AAOH,OATD;AAUH;;;2CAEsB;AACnBf,MAAAA,UAAU;AACb;;;6BAEQ;AACL,aAAO,IAAP;AACH;;;;EA5CqBF,a;;AA+C1B,eAAeG,WAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { register, unregister } from 'next-offline/runtime'\r\n\r\nclass NextOffline extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        //register();\r\n        if ('serviceWorker' in navigator) {\r\n            window.addEventListener('load', function () {\r\n                navigator.serviceWorker\r\n                    .register('/service-worker.js', { scope: '/' }).then(registration => {\r\n                        console.log('Service worker: ', registration.active.state);\r\n                    }).catch((registrationError) => {\r\n                        console.log('Service Worker registration failed: ', registrationError)\r\n                    });\r\n            });\r\n        }\r\n        var CACHE_NAME = 'my-site-cache-v1';\r\n        var urlsToCache = [\r\n            '/',\r\n            '/pages/header.js',\r\n            '/pages/layout.js',\r\n            '/pages/index.js',\r\n            '/pages/nextoffline.js',\r\n            '/server.js',\r\n            '/next.config.js',\r\n            '/static/icons/icon.png',\r\n        ];\r\n\r\n        window.addEventListener('install', function (event) {\r\n            // Perform install steps\r\n            event.waitUntil(\r\n                caches.open(CACHE_NAME)\r\n                    .then(cache => {\r\n                        console.log('Opened cache');\r\n                        return cache.addAll(urlsToCache);\r\n                    })\r\n            );\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        unregister();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default NextOffline;"]},"metadata":{},"sourceType":"module"}