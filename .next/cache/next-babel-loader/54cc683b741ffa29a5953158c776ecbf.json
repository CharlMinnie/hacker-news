{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport { register, unregister } from 'next-offline/runtime';\n\nclass NextOffline extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"beforeinstallpromt\", e => {\n      e.prompt();\n    });\n  }\n\n  componentDidMount() {\n    register(); // if ('serviceWorker' in navigator) {\n    //     window.addEventListener('load', function () {\n    //         navigator.serviceWorker\n    //             .register('/service-worker.js', { scope: '/' }).then(registration => {\n    //                 console.log('Service worker registered', registration);\n    //             }).catch((registrationError) => {\n    //                 console.log('Service Worker registration failed: ', registrationError)\n    //             });\n    //     });\n    // }\n\n    window;\n  }\n\n  componentWillUnmount() {\n    unregister();\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default NextOffline;","map":{"version":3,"sources":["C:/Users/Lolwethu.Bongoza/Documents/Git/hacker-news/pages/nextoffline.js"],"names":["React","PureComponent","register","unregister","NextOffline","e","prompt","componentDidMount","window","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,sBAArC;;AAEA,MAAMC,WAAN,SAA0BH,aAA1B,CAAwC;AAAA;AAAA;;AAAA,gDAEdI,CAAD,IAAO;AACxBA,MAAAA,CAAC,CAACC,MAAF;AACH,KAJmC;AAAA;;AAMpCC,EAAAA,iBAAiB,GAAG;AAChBL,IAAAA,QAAQ,GADQ,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAM,IAAAA,MAAM;AACT;;AAIDC,EAAAA,oBAAoB,GAAG;AACnBN,IAAAA,UAAU;AACb;;AAEDO,EAAAA,MAAM,GAAG;AACL,WAAO,IAAP;AACH;;AA9BmC;;AAiCxC,eAAeN,WAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { register, unregister } from 'next-offline/runtime'\r\n\r\nclass NextOffline extends PureComponent {\r\n\r\n    beforeinstallpromt = (e) => {\r\n        e.prompt();\r\n    };\r\n    \r\n    componentDidMount() {\r\n        register();\r\n        // if ('serviceWorker' in navigator) {\r\n        //     window.addEventListener('load', function () {\r\n        //         navigator.serviceWorker\r\n        //             .register('/service-worker.js', { scope: '/' }).then(registration => {\r\n        //                 console.log('Service worker registered', registration);\r\n        //             }).catch((registrationError) => {\r\n        //                 console.log('Service Worker registration failed: ', registrationError)\r\n        //             });\r\n        //     });\r\n        // }\r\n\r\n        window\r\n    }\r\n\r\n    \r\n\r\n    componentWillUnmount() {\r\n        unregister();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default NextOffline;"]},"metadata":{},"sourceType":"module"}