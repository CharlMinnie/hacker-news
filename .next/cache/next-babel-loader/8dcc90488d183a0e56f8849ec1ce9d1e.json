{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport { register, unregister } from 'next-offline/runtime';\n\nclass NextOffline extends PureComponent {\n  componentDidMount() {\n    //register();\n    if ('serviceWorker' in navigator) {\n      window.addEventListener('load', function () {\n        navigator.serviceWorker.register('/service-worker.js', {\n          scope: '/'\n        }).then(function (registration) {\n          console.log('SW registered: ', registration);\n        }).catch(function (registrationError) {\n          console.log('SW registration failed: ', registrationError);\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    unregister();\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default NextOffline;","map":{"version":3,"sources":["C:/Users/Lolwethu.Bongoza/Documents/Git/hacker-news/pages/nextoffline.js"],"names":["React","PureComponent","register","unregister","NextOffline","componentDidMount","navigator","window","addEventListener","serviceWorker","scope","then","registration","console","log","catch","registrationError","componentWillUnmount","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,sBAArC;;AAEA,MAAMC,WAAN,SAA0BH,aAA1B,CAAwC;AACpCI,EAAAA,iBAAiB,GAAG;AAChB;AAEA,QAAI,mBAAmBC,SAAvB,EAAkC;AAC9BC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxCF,QAAAA,SAAS,CAACG,aAAV,CAAwBP,QAAxB,CAAiC,oBAAjC,EAAuD;AAAEQ,UAAAA,KAAK,EAAE;AAAT,SAAvD,EAAuEC,IAAvE,CAA4E,UAAUC,YAAV,EAAwB;AAChGC,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,YAA/B;AACH,SAFD,EAEGG,KAFH,CAES,UAAUC,iBAAV,EAA6B;AAClCH,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCE,iBAAxC;AACH,SAJD;AAKH,OAND;AAOH;AACJ;;AACDC,EAAAA,oBAAoB,GAAG;AACnBd,IAAAA,UAAU;AACb;;AAEDe,EAAAA,MAAM,GAAG;AACL,WAAO,IAAP;AACH;;AApBmC;;AAuBxC,eAAed,WAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { register, unregister } from 'next-offline/runtime'\r\n\r\nclass NextOffline extends PureComponent {\r\n    componentDidMount() {\r\n        //register();\r\n\r\n        if ('serviceWorker' in navigator) {\r\n            window.addEventListener('load', function () {\r\n                navigator.serviceWorker.register('/service-worker.js', { scope: '/' }).then(function (registration) {\r\n                    console.log('SW registered: ', registration)\r\n                }).catch(function (registrationError) {\r\n                    console.log('SW registration failed: ', registrationError)\r\n                })\r\n            })\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        unregister();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default NextOffline;"]},"metadata":{},"sourceType":"module"}