{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport { register, unregister } from 'next-offline/runtime';\n\nclass NextOffline extends PureComponent {\n  componentDidMount() {\n    //register();\n    const installprompt = e => {\n      deferredPrompt = e;\n      deferredPrompt.preventDefault();\n      deferredPrompt.prompt().then(_deferredEvent => {\n        _deferredEvent.userChoice.then(_userChoiceResult => {\n          if (_userChoiceResult.outcome) {\n            analyticsService.analyticsPush('PWA Popup', 'Event:PWA Install Prompt', 'PWA Prompt User Choice', _userChoiceResult.outcome);\n          }\n\n          window.addEventListener('appinstalled', evt => {\n            analyticsService.analyticsPush('PWA Popup', 'Event:PWA Installed', 'Installation Complete', true);\n            pwaShortCutAdded();\n          });\n          deferredPrompt = null;\n        });\n      });\n      return false;\n    };\n\n    if ('serviceWorker' in navigator) {\n      window.addEventListener('load', function () {\n        navigator.serviceWorker.register('/service-worker.js', {\n          scope: '/'\n        }).then(function (registration) {\n          console.log('Service worker registered');\n\n          if (registration.active) {\n            window.addEventListener('beforeinstallprompt', beforeinstallprompt);\n          }\n        }).catch(function (registrationError) {\n          console.log('Service Worker registration failed: ', registrationError);\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    unregister();\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default NextOffline;","map":{"version":3,"sources":["C:/Users/Lolwethu.Bongoza/Documents/Git/hacker-news/pages/nextoffline.js"],"names":["React","PureComponent","register","unregister","NextOffline","componentDidMount","installprompt","e","deferredPrompt","preventDefault","prompt","then","_deferredEvent","userChoice","_userChoiceResult","outcome","analyticsService","analyticsPush","window","addEventListener","evt","pwaShortCutAdded","navigator","serviceWorker","scope","registration","console","log","active","beforeinstallprompt","catch","registrationError","componentWillUnmount","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,sBAArC;;AAEA,MAAMC,WAAN,SAA0BH,aAA1B,CAAwC;AACpCI,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBC,MAAAA,cAAc,GAAGD,CAAjB;AACAC,MAAAA,cAAc,CAACC,cAAf;AACAD,MAAAA,cAAc,CAACE,MAAf,GACKC,IADL,CACWC,cAAD,IAAoB;AAEtBA,QAAAA,cAAc,CAACC,UAAf,CACKF,IADL,CACWG,iBAAD,IAAuB;AAEzB,cAAIA,iBAAiB,CAACC,OAAtB,EAA+B;AAE3BC,YAAAA,gBAAgB,CAACC,aAAjB,CAA+B,WAA/B,EAA4C,0BAA5C,EAAwE,wBAAxE,EAAkGH,iBAAiB,CAACC,OAApH;AACH;;AAEDG,UAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAyCC,GAAD,IAAS;AAE7CJ,YAAAA,gBAAgB,CAACC,aAAjB,CAA+B,WAA/B,EAA4C,qBAA5C,EAAmE,uBAAnE,EAA4F,IAA5F;AACAI,YAAAA,gBAAgB;AACnB,WAJD;AAMAb,UAAAA,cAAc,GAAG,IAAjB;AACH,SAfL;AAgBH,OAnBL;AAoBA,aAAO,KAAP;AACH,KAxBD;;AA0BA,QAAI,mBAAmBc,SAAvB,EAAkC;AAC9BJ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxCG,QAAAA,SAAS,CAACC,aAAV,CACKrB,QADL,CACc,oBADd,EACoC;AAAEsB,UAAAA,KAAK,EAAE;AAAT,SADpC,EACoDb,IADpD,CACyD,UAAUc,YAAV,EAAwB;AACzEC,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,cAAIF,YAAY,CAACG,MAAjB,EAAyB;AAErBV,YAAAA,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+CU,mBAA/C;AACH;AAEJ,SARL,EAQOC,KARP,CAQa,UAAUC,iBAAV,EAA6B;AAClCL,UAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDI,iBAApD;AACH,SAVL;AAWH,OAZD;AAaH;AACJ;;AACDC,EAAAA,oBAAoB,GAAG;AACnB7B,IAAAA,UAAU;AACb;;AAED8B,EAAAA,MAAM,GAAG;AACL,WAAO,IAAP;AACH;;AAnDmC;;AAsDxC,eAAe7B,WAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { register, unregister } from 'next-offline/runtime'\r\n\r\nclass NextOffline extends PureComponent {\r\n    componentDidMount() {\r\n        //register();\r\n        const installprompt = (e) => {\r\n            deferredPrompt = e;\r\n            deferredPrompt.preventDefault();\r\n            deferredPrompt.prompt()\r\n                .then((_deferredEvent) => {\r\n\r\n                    _deferredEvent.userChoice\r\n                        .then((_userChoiceResult) => {\r\n\r\n                            if (_userChoiceResult.outcome) {\r\n\r\n                                analyticsService.analyticsPush('PWA Popup', 'Event:PWA Install Prompt', 'PWA Prompt User Choice', _userChoiceResult.outcome);\r\n                            }\r\n\r\n                            window.addEventListener('appinstalled', (evt) => {\r\n\r\n                                analyticsService.analyticsPush('PWA Popup', 'Event:PWA Installed', 'Installation Complete', true);\r\n                                pwaShortCutAdded();\r\n                            });\r\n\r\n                            deferredPrompt = null;\r\n                        });\r\n                });\r\n            return false;\r\n        };\r\n        \r\n        if ('serviceWorker' in navigator) {\r\n            window.addEventListener('load', function () {\r\n                navigator.serviceWorker\r\n                    .register('/service-worker.js', { scope: '/' }).then(function (registration) {\r\n                        console.log('Service worker registered');\r\n                        if (registration.active) {\r\n\r\n                            window.addEventListener('beforeinstallprompt', beforeinstallprompt);\r\n                        }\r\n\r\n                    }).catch(function (registrationError) {\r\n                        console.log('Service Worker registration failed: ', registrationError)\r\n                    });\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        unregister();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default NextOffline;"]},"metadata":{},"sourceType":"module"}