{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { PureComponent } from 'react';\nimport { register, unregister } from 'next-offline/runtime';\n\nvar NextOffline =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(NextOffline, _PureComponent);\n\n  function NextOffline() {\n    _classCallCheck(this, NextOffline);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NextOffline).apply(this, arguments));\n  }\n\n  _createClass(NextOffline, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //register();\n      var installprompt = function installprompt(e) {\n        deferredPrompt = e;\n        deferredPrompt.preventDefault();\n        deferredPrompt.prompt().then(function (_deferredEvent) {\n          _deferredEvent.userChoice.then(function (_userChoiceResult) {\n            if (_userChoiceResult.outcome) {\n              analyticsService.analyticsPush('PWA Popup', 'Event:PWA Install Prompt', 'PWA Prompt User Choice', _userChoiceResult.outcome);\n            }\n\n            window.addEventListener('appinstalled', function (evt) {\n              analyticsService.analyticsPush('PWA Popup', 'Event:PWA Installed', 'Installation Complete', true);\n              pwaShortCutAdded();\n            });\n            deferredPrompt = null;\n          });\n        });\n        return false;\n      };\n\n      if ('serviceWorker' in navigator) {\n        window.addEventListener('load', function () {\n          navigator.serviceWorker.register('/service-worker.js', {\n            scope: '/'\n          }).then(function (registration) {\n            console.log('Service worker registered');\n\n            if (registration.active) {\n              window.addEventListener('beforeinstallprompt', beforeinstallprompt);\n            }\n          })[\"catch\"](function (registrationError) {\n            console.log('Service Worker registration failed: ', registrationError);\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      unregister();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return NextOffline;\n}(PureComponent);\n\nexport default NextOffline;","map":{"version":3,"sources":["C:/Users/Lolwethu.Bongoza/Documents/Git/hacker-news/pages/nextoffline.js"],"names":["React","PureComponent","register","unregister","NextOffline","installprompt","e","deferredPrompt","preventDefault","prompt","then","_deferredEvent","userChoice","_userChoiceResult","outcome","analyticsService","analyticsPush","window","addEventListener","evt","pwaShortCutAdded","navigator","serviceWorker","scope","registration","console","log","active","beforeinstallprompt","registrationError"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,sBAArC;;IAEMC,W;;;;;;;;;;;;;wCACkB;AAChB;AACA,UAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;AACzBC,QAAAA,cAAc,GAAGD,CAAjB;AACAC,QAAAA,cAAc,CAACC,cAAf;AAEAD,QAAAA,cAAc,CAACE,MAAf,GACKC,IADL,CACU,UAACC,cAAD,EAAoB;AAEtBA,UAAAA,cAAc,CAACC,UAAf,CACKF,IADL,CACU,UAACG,iBAAD,EAAuB;AAEzB,gBAAIA,iBAAiB,CAACC,OAAtB,EAA+B;AAE3BC,cAAAA,gBAAgB,CAACC,aAAjB,CAA+B,WAA/B,EAA4C,0BAA5C,EAAwE,wBAAxE,EAAkGH,iBAAiB,CAACC,OAApH;AACH;;AAEDG,YAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwC,UAACC,GAAD,EAAS;AAE7CJ,cAAAA,gBAAgB,CAACC,aAAjB,CAA+B,WAA/B,EAA4C,qBAA5C,EAAmE,uBAAnE,EAA4F,IAA5F;AACAI,cAAAA,gBAAgB;AACnB,aAJD;AAMAb,YAAAA,cAAc,GAAG,IAAjB;AACH,WAfL;AAgBH,SAnBL;AAoBA,eAAO,KAAP;AACH,OAzBD;;AA2BA,UAAI,mBAAmBc,SAAvB,EAAkC;AAC9BJ,QAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxCG,UAAAA,SAAS,CAACC,aAAV,CACKpB,QADL,CACc,oBADd,EACoC;AAAEqB,YAAAA,KAAK,EAAE;AAAT,WADpC,EACoDb,IADpD,CACyD,UAAUc,YAAV,EAAwB;AACzEC,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,gBAAIF,YAAY,CAACG,MAAjB,EAAyB;AAErBV,cAAAA,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+CU,mBAA/C;AACH;AAEJ,WARL,WAQa,UAAUC,iBAAV,EAA6B;AAClCJ,YAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDG,iBAApD;AACH,WAVL;AAWH,SAZD;AAaH;AACJ;;;2CACsB;AACnB1B,MAAAA,UAAU;AACb;;;6BAEQ;AACL,aAAO,IAAP;AACH;;;;EApDqBF,a;;AAuD1B,eAAeG,WAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { register, unregister } from 'next-offline/runtime'\r\n\r\nclass NextOffline extends PureComponent {\r\n    componentDidMount() {\r\n        //register();\r\n        const installprompt = (e) => {\r\n            deferredPrompt = e;\r\n            deferredPrompt.preventDefault();\r\n            \r\n            deferredPrompt.prompt()\r\n                .then((_deferredEvent) => {\r\n\r\n                    _deferredEvent.userChoice\r\n                        .then((_userChoiceResult) => {\r\n\r\n                            if (_userChoiceResult.outcome) {\r\n\r\n                                analyticsService.analyticsPush('PWA Popup', 'Event:PWA Install Prompt', 'PWA Prompt User Choice', _userChoiceResult.outcome);\r\n                            }\r\n\r\n                            window.addEventListener('appinstalled', (evt) => {\r\n\r\n                                analyticsService.analyticsPush('PWA Popup', 'Event:PWA Installed', 'Installation Complete', true);\r\n                                pwaShortCutAdded();\r\n                            });\r\n\r\n                            deferredPrompt = null;\r\n                        });\r\n                });\r\n            return false;\r\n        };\r\n        \r\n        if ('serviceWorker' in navigator) {\r\n            window.addEventListener('load', function () {\r\n                navigator.serviceWorker\r\n                    .register('/service-worker.js', { scope: '/' }).then(function (registration) {\r\n                        console.log('Service worker registered');\r\n                        if (registration.active) {\r\n\r\n                            window.addEventListener('beforeinstallprompt', beforeinstallprompt);\r\n                        }\r\n\r\n                    }).catch(function (registrationError) {\r\n                        console.log('Service Worker registration failed: ', registrationError)\r\n                    });\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        unregister();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default NextOffline;"]},"metadata":{},"sourceType":"module"}