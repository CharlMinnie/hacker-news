{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport { register, unregister } from 'next-offline/runtime';\n\nclass NextOffline extends PureComponent {\n  componentDidMount() {\n    //register();\n    const beforeinstallprompt = function (e) {\n      deferredPrompt = e;\n      deferredPrompt.preventDefault();\n\n      if (isPwaCustomDesignEnabled) {\n        showAddToHomeScreen();\n      }\n\n      analyticsService.analyticsPush('PWA Popup', 'Event: PWA Prompt');\n      return false;\n    };\n\n    const installprompt = e => {\n      deferredPrompt = e;\n      deferredPrompt.preventDefault();\n      deferredPrompt.prompt().then(_deferredEvent => {\n        _deferredEvent.userChoice.then(_userChoiceResult => {\n          alert(`User Choice: ${_userChoiceResult.outcome}`);\n          deferredPrompt = null;\n        });\n      });\n      return false;\n    };\n\n    if ('serviceWorker' in navigator) {\n      window.addEventListener('load', function () {\n        navigator.serviceWorker.register('/service-worker.js', {\n          scope: '/'\n        }).then(function (registration) {\n          console.log('Service worker registered');\n\n          if (registration.active) {\n            window.addEventListener('beforeinstallprompt', beforeinstallprompt);\n          }\n        }).catch(function (registrationError) {\n          console.log('Service Worker registration failed: ', registrationError);\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    unregister();\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default NextOffline;","map":{"version":3,"sources":["C:/Users/Lolwethu.Bongoza/Documents/Git/hacker-news/pages/nextoffline.js"],"names":["React","PureComponent","register","unregister","NextOffline","componentDidMount","beforeinstallprompt","e","deferredPrompt","preventDefault","isPwaCustomDesignEnabled","showAddToHomeScreen","analyticsService","analyticsPush","installprompt","prompt","then","_deferredEvent","userChoice","_userChoiceResult","alert","outcome","navigator","window","addEventListener","serviceWorker","scope","registration","console","log","active","catch","registrationError","componentWillUnmount","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,sBAArC;;AAEA,MAAMC,WAAN,SAA0BH,aAA1B,CAAwC;AACpCI,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAMC,mBAAmB,GAAG,UAAUC,CAAV,EAAa;AACrCC,MAAAA,cAAc,GAAGD,CAAjB;AACAC,MAAAA,cAAc,CAACC,cAAf;;AAEA,UAAIC,wBAAJ,EAA8B;AAC1BC,QAAAA,mBAAmB;AACtB;;AAEDC,MAAAA,gBAAgB,CAACC,aAAjB,CAA+B,WAA/B,EAA4C,mBAA5C;AAEA,aAAO,KAAP;AACH,KAXD;;AAaA,UAAMC,aAAa,GAAIP,CAAD,IAAO;AACzBC,MAAAA,cAAc,GAAGD,CAAjB;AACAC,MAAAA,cAAc,CAACC,cAAf;AAEAD,MAAAA,cAAc,CAACO,MAAf,GACKC,IADL,CACWC,cAAD,IAAoB;AAEtBA,QAAAA,cAAc,CAACC,UAAf,CACKF,IADL,CACWG,iBAAD,IAAuB;AACzBC,UAAAA,KAAK,CAAE,gBAAeD,iBAAiB,CAACE,OAAQ,EAA3C,CAAL;AACAb,UAAAA,cAAc,GAAG,IAAjB;AACH,SAJL;AAKH,OARL;AASA,aAAO,KAAP;AACH,KAdD;;AAgBA,QAAI,mBAAmBc,SAAvB,EAAkC;AAC9BC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxCF,QAAAA,SAAS,CAACG,aAAV,CACKvB,QADL,CACc,oBADd,EACoC;AAAEwB,UAAAA,KAAK,EAAE;AAAT,SADpC,EACoDV,IADpD,CACyD,UAAUW,YAAV,EAAwB;AACzEC,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,cAAIF,YAAY,CAACG,MAAjB,EAAyB;AAErBP,YAAAA,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+ClB,mBAA/C;AACH;AAEJ,SARL,EAQOyB,KARP,CAQa,UAAUC,iBAAV,EAA6B;AAClCJ,UAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDG,iBAApD;AACH,SAVL;AAWH,OAZD;AAaH;AACJ;;AACDC,EAAAA,oBAAoB,GAAG;AACnB9B,IAAAA,UAAU;AACb;;AAED+B,EAAAA,MAAM,GAAG;AACL,WAAO,IAAP;AACH;;AAtDmC;;AAyDxC,eAAe9B,WAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { register, unregister } from 'next-offline/runtime'\r\n\r\nclass NextOffline extends PureComponent {\r\n    componentDidMount() {\r\n        //register();\r\n        const beforeinstallprompt = function (e) {\r\n            deferredPrompt = e;\r\n            deferredPrompt.preventDefault();\r\n\r\n            if (isPwaCustomDesignEnabled) {\r\n                showAddToHomeScreen();\r\n            }\r\n\r\n            analyticsService.analyticsPush('PWA Popup', 'Event: PWA Prompt');\r\n\r\n            return false;\r\n        };\r\n        \r\n        const installprompt = (e) => {\r\n            deferredPrompt = e;\r\n            deferredPrompt.preventDefault();\r\n            \r\n            deferredPrompt.prompt()\r\n                .then((_deferredEvent) => {\r\n\r\n                    _deferredEvent.userChoice\r\n                        .then((_userChoiceResult) => {\r\n                            alert(`User Choice: ${_userChoiceResult.outcome}`);\r\n                            deferredPrompt = null;\r\n                        });\r\n                });\r\n            return false;\r\n        };\r\n        \r\n        if ('serviceWorker' in navigator) {\r\n            window.addEventListener('load', function () {\r\n                navigator.serviceWorker\r\n                    .register('/service-worker.js', { scope: '/' }).then(function (registration) {\r\n                        console.log('Service worker registered');\r\n                        if (registration.active) {\r\n\r\n                            window.addEventListener('beforeinstallprompt', beforeinstallprompt);\r\n                        }\r\n\r\n                    }).catch(function (registrationError) {\r\n                        console.log('Service Worker registration failed: ', registrationError)\r\n                    });\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        unregister();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default NextOffline;"]},"metadata":{},"sourceType":"module"}