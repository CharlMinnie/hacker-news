{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { PureComponent } from 'react';\nimport { register, unregister } from 'next-offline/runtime';\n\nvar NextOffline =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(NextOffline, _PureComponent);\n\n  function NextOffline() {\n    _classCallCheck(this, NextOffline);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NextOffline).apply(this, arguments));\n  }\n\n  _createClass(NextOffline, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //register();\n      if ('serviceWorker' in navigator) {\n        window.addEventListener('load', function () {\n          navigator.serviceWorker.register('/service-worker.js', {\n            scope: '/'\n          }).then(function (registration) {\n            console.log('Service worker registered');\n\n            if (registration.active) {\n              var webAppLaunched = window.navigator.fullscreen;\n              if (webAppLaunched) analyticsService.analyticsPush('PWA Popup', 'Event:PWA Launched From App Icon', 'PWA Launch', webAppLaunched);\n              window.addEventListener('beforeinstallprompt', beforeinstallprompt);\n              window.addEventListener('appinstalled', installed);\n            }\n          })[\"catch\"](function (registrationError) {\n            console.log('SW registration failed: ', registrationError);\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      unregister();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return NextOffline;\n}(PureComponent);\n\nexport default NextOffline;","map":{"version":3,"sources":["C:/Users/Lolwethu.Bongoza/Documents/Git/hacker-news/pages/nextoffline.js"],"names":["React","PureComponent","register","unregister","NextOffline","navigator","window","addEventListener","serviceWorker","scope","then","registration","console","log","active","webAppLaunched","fullscreen","analyticsService","analyticsPush","beforeinstallprompt","installed","registrationError"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,sBAArC;;IAEMC,W;;;;;;;;;;;;;wCACkB;AAChB;AAEA,UAAI,mBAAmBC,SAAvB,EAAkC;AAC9BC,QAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxCF,UAAAA,SAAS,CAACG,aAAV,CACKN,QADL,CACc,oBADd,EACoC;AAAEO,YAAAA,KAAK,EAAE;AAAT,WADpC,EACoDC,IADpD,CACyD,UAAUC,YAAV,EAAwB;AACzEC,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,gBAAIF,YAAY,CAACG,MAAjB,EAAyB;AAErB,kBAAMC,cAAc,GAAGT,MAAM,CAACD,SAAP,CAAiBW,UAAxC;AAEA,kBAAID,cAAJ,EAAoBE,gBAAgB,CAACC,aAAjB,CAA+B,WAA/B,EAA4C,kCAA5C,EAAgF,YAAhF,EAA8FH,cAA9F;AAEpBT,cAAAA,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+CY,mBAA/C;AACAb,cAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwCa,SAAxC;AACH;AAER,WAbD,WAaS,UAAUC,iBAAV,EAA6B;AAClCT,YAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCQ,iBAAxC;AACH,WAfD;AAgBH,SAjBD;AAkBH;AACJ;;;2CACsB;AACnBlB,MAAAA,UAAU;AACb;;;6BAEQ;AACL,aAAO,IAAP;AACH;;;;EA/BqBF,a;;AAkC1B,eAAeG,WAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { register, unregister } from 'next-offline/runtime'\r\n\r\nclass NextOffline extends PureComponent {\r\n    componentDidMount() {\r\n        //register();\r\n\r\n        if ('serviceWorker' in navigator) {\r\n            window.addEventListener('load', function () {\r\n                navigator.serviceWorker\r\n                    .register('/service-worker.js', { scope: '/' }).then(function (registration) {\r\n                        console.log('Service worker registered');\r\n                        if (registration.active) { \r\n\r\n                            const webAppLaunched = window.navigator.fullscreen;\r\n\r\n                            if (webAppLaunched) analyticsService.analyticsPush('PWA Popup', 'Event:PWA Launched From App Icon', 'PWA Launch', webAppLaunched);\r\n\r\n                            window.addEventListener('beforeinstallprompt', beforeinstallprompt);\r\n                            window.addEventListener('appinstalled', installed);\r\n                        }\r\n\r\n                }).catch(function (registrationError) {\r\n                    console.log('SW registration failed: ', registrationError)\r\n                })\r\n            })\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        unregister();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default NextOffline;"]},"metadata":{},"sourceType":"module"}